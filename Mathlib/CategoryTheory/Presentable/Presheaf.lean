/-
Copyright (c) 2025 Jo√´l Riou. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jo√´l Riou
-/
import Mathlib.CategoryTheory.Presentable.StrongGenerator
import Mathlib.CategoryTheory.Generator.Presheaf
import Mathlib.CategoryTheory.Generator.Type
import Mathlib.CategoryTheory.Limits.FunctorCategory.Basic
import Mathlib.CategoryTheory.Limits.FunctorCategory.EpiMono
import Mathlib.CategoryTheory.Limits.Presheaf

/-!
# Categories of presheaves are locally presentable

-/

universe w v v' u u'

namespace CategoryTheory

open Opposite Limits

instance (Œ∫ : Cardinal.{w}) [Fact Œ∫.IsRegular] :
    IsCardinalPresentable PUnit.{w + 1} Œ∫ where
  preservesColimitOfShape J _ _ := by
    let e : coyoneda.obj (op (PUnit.{w + 1})) ‚âÖ ùü≠ _ :=
      NatIso.ofComponents (fun X ‚Ü¶ Equiv.toIso
        { toFun f := f .unit
          invFun x _ := x })
    exact preservesColimitsOfShape_of_natIso e.symm

namespace Presheaf

attribute [local simp] freeYonedaHomEquiv_comp in
instance {C : Type u} [Category.{v} C] {A : Type u'} [Category.{v'} A]
    [HasColimitsOfSize.{w, w} A] [HasCoproducts.{v} A]
    (Œ∫ : Cardinal.{w}) [Fact Œ∫.IsRegular] (X : C) (M : A)
    [IsCardinalPresentable M Œ∫] :
    IsCardinalPresentable (freeYoneda X M) Œ∫ := by
  let e : coyoneda.obj (op (freeYoneda X M)) ‚âÖ
      (evaluation C·µí·µñ A).obj (op X) ‚ãô coyoneda.obj (op M) ‚ãô uliftFunctor.{u} :=
    NatIso.ofComponents (fun P ‚Ü¶ Equiv.toIso (freeYonedaHomEquiv.trans Equiv.ulift.symm))
  constructor
  intro J _ _
  have := preservesColimitsOfShape_of_isCardinalPresentable M Œ∫ J
  exact preservesColimitsOfShape_of_natIso e.symm

variable (C : Type w) [SmallCategory C]

instance (Œ∫ : Cardinal.{w}) [Fact Œ∫.IsRegular] :
    IsCardinalLocallyPresentable (C·µí·µñ ‚•§ Type w) Œ∫ := by
  rw [IsCardinalLocallyPresentable.iff_exists_isStrongGenerator]
  have := isSeparating (C := C) (S := fun (_ : Unit) ‚Ü¶ PUnit.{w + 1}) (by
    rw [Set.range_const]
    exact Types.isSeparator_punit)
  refine ‚ü®_, inferInstance, isStrongGenerator_iff.2 ‚ü®this, ?_‚ü©, ?_‚ü©
  ¬∑ rintro P‚ÇÅ P‚ÇÇ i _ h
    rw [NatTrans.isIso_iff_isIso_app]
    rintro ‚ü®X‚ü©
    rw [isIso_iff_bijective]
    constructor
    ¬∑ rw [‚Üê mono_iff_injective]
      infer_instance
    ¬∑ intro y
      obtain ‚ü®œÜ, hœÜ‚ü© := h (‚ü®freeYoneda X PUnit, ‚ü®X, .unit‚ü©, by simp‚ü©)
        (freeYonedaHomEquiv.2 (fun _ ‚Ü¶ y))
      obtain ‚ü®œÜ, rfl‚ü© := freeYonedaHomEquiv.symm.surjective œÜ
      dsimp at hœÜ
      rw [freeYonedaHomEquiv_symm_comp, EmbeddingLike.apply_eq_iff_eq] at hœÜ
      exact ‚ü®œÜ .unit, congr_fun hœÜ .unit‚ü©
  ¬∑ rintro ‚ü®P, hP‚ü©
    simp only [Set.mem_range, Prod.exists, exists_const] at hP
    obtain ‚ü®X, rfl‚ü© := hP
    infer_instance

instance : IsLocallyPresentable.{w} (C·µí·µñ ‚•§ Type w) where
  exists_cardinal :=
    ‚ü®_, Cardinal.fact_isRegular_aleph0, inferInstance‚ü©

end Presheaf

end CategoryTheory
